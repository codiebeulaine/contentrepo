# Generated by Django 4.1.11 on 2024-03-05 07:31

import django.core.validators
import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index
from django.db import migrations, models

import home.models


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailcore", "0085_alter_page_slug"),
        ("home", "0049_orderedcontentset_expire_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="WhatsAppTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "live",
                    models.BooleanField(
                        default=True, editable=False, verbose_name="live"
                    ),
                ),
                (
                    "has_unpublished_changes",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="has unpublished changes",
                    ),
                ),
                (
                    "first_published_at",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="first published at",
                    ),
                ),
                (
                    "last_published_at",
                    models.DateTimeField(
                        editable=False, null=True, verbose_name="last published at"
                    ),
                ),
                (
                    "go_live_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="go live date/time"
                    ),
                ),
                (
                    "expire_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="expiry date/time"
                    ),
                ),
                (
                    "expired",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="expired"
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=512)),
                (
                    "category",
                    models.CharField(
                        choices=[("MARKETING", "Marketing"), ("UTILITY", "Utility")],
                        default="UTILITY",
                        max_length=14,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "Whatsapp_Message",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "document",
                                            wagtail.documents.blocks.DocumentChooserBlock(
                                                icon="document", required=False
                                            ),
                                        ),
                                        (
                                            "media",
                                            home.models.MediaBlock(
                                                icon="media", required=False
                                            ),
                                        ),
                                        (
                                            "message",
                                            wagtail.blocks.TextBlock(
                                                help_text="each text message cannot exceed 4096 characters, messages with media cannot exceed 1024 characters.",
                                                validators=(
                                                    django.core.validators.MaxLengthValidator(
                                                        4096
                                                    ),
                                                ),
                                            ),
                                        ),
                                        (
                                            "example_values",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.CharBlock(
                                                    label="Example Value"
                                                ),
                                                default=[],
                                                help_text="Please add example values for all variables used in a WhatsApp template",
                                                label="Variable Example Values",
                                            ),
                                        ),
                                        (
                                            "variation_messages",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "variation_restrictions",
                                                            wagtail.blocks.StreamBlock(
                                                                [
                                                                    (
                                                                        "gender",
                                                                        wagtail.blocks.ChoiceBlock(
                                                                            choices=home.models.get_gender_choices
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "age",
                                                                        wagtail.blocks.ChoiceBlock(
                                                                            choices=home.models.get_age_choices
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "relationship",
                                                                        wagtail.blocks.ChoiceBlock(
                                                                            choices=home.models.get_relationship_choices
                                                                        ),
                                                                    ),
                                                                ],
                                                                help_text="Restrict this variation to users with this profile value. Valid values must be added to the Site Settings",
                                                                max_num=1,
                                                                min_num=1,
                                                                required=False,
                                                                use_json_field=True,
                                                            ),
                                                        ),
                                                        (
                                                            "message",
                                                            wagtail.blocks.TextBlock(
                                                                help_text="each message cannot exceed 4096 characters.",
                                                                validators=(
                                                                    django.core.validators.MaxLengthValidator(
                                                                        4096
                                                                    ),
                                                                ),
                                                            ),
                                                        ),
                                                    ]
                                                ),
                                                default=[],
                                            ),
                                        ),
                                        (
                                            "next_prompt",
                                            wagtail.blocks.CharBlock(
                                                help_text="prompt text for next message",
                                                required=False,
                                                validators=(
                                                    django.core.validators.MaxLengthValidator(
                                                        20
                                                    ),
                                                ),
                                            ),
                                        ),
                                        (
                                            "buttons",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "next_message",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="text for the button, up to 20 characters.",
                                                                        validators=(
                                                                            django.core.validators.MaxLengthValidator(
                                                                                20
                                                                            ),
                                                                        ),
                                                                    ),
                                                                )
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "go_to_page",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="text for the button, up to 20 characters.",
                                                                        validators=(
                                                                            django.core.validators.MaxLengthValidator(
                                                                                20
                                                                            ),
                                                                        ),
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        help_text="page the button should go to"
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                ],
                                                max_num=3,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "list_items",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.CharBlock(label="Title"),
                                                default=[],
                                                help_text="List item title, up to 24 characters.",
                                                max_num=10,
                                                required=False,
                                                validators=django.core.validators.MaxLengthValidator(
                                                    24
                                                ),
                                            ),
                                        ),
                                        (
                                            "footer",
                                            wagtail.blocks.CharBlock(
                                                help_text="Footer cannot exceed 60 characters.",
                                                required=False,
                                                validators=(
                                                    django.core.validators.MaxLengthValidator(
                                                        60
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ],
                                    help_text="Each message will be sent with the text and media",
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "latest_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                        verbose_name="latest revision",
                    ),
                ),
                (
                    "live_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                        verbose_name="live revision",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailcore.locale",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
    ]
